/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR__CAMERALOOKAT "y"
# define VAR__CAMERAPOSITION "x"
# define VAR__CAMERAUP "c"
# define VAR__DIRECTIONALLIGHT "n"
# define VAR__DIRECTIONALLIGHTCOLOR "i"
# define VAR__FOV "r"
# define VAR__OBJECTS "M"
# define VAR__POINTLIGHTCOLOR "f"
# define VAR__POINTLIGHTPOSITION "d"
# define VAR__IRESOLUTION "m"
# define VAR__ITIME "v"

const char *fragment_frag =
 "#version 130\n"
 "uniform float v;"
 "uniform vec4 m,n,i,d,f,x,y,c;"
 "uniform float r;\n"
 "#define maxItersGlobal 123\n"
 "#define fogDensity 0.01\n"
 "#define ENABLE_FOG\n"
 "#define ENABLE_REFLECTIONS\n"
 "#define ENABLE_SHADOWS\n"
 "#define ENABLE_TRANSPARENCY\n"
 "#define ENABLE_AO\n"
 "#define DOUBLE_SIDED_TRANSPARENCY\n"
 "#define saturate(x)clamp(x,0,1)\n"
 "float s,z;"
 "const float C=3.14159,l=C/180.,o=C*2.,e=C*2.,h=sqrt(5)*.5+.5,t=32.,w=-1.,p=1.,A=0.;struct Trace{vec3 origin;vec3 direction;float startdistanc;float length;};struct Surface{vec3 normal;vec3 reflection;vec3 subsurface;};struct Material{float reflectionCoefficient;float smoothness;float transparency;float reflectindx;vec3 albedo;};struct Shading{vec3 diffuse;vec3 specular;};struct ContactInfo{vec3 position;float distanc;vec3 id;};struct PointLight{vec3 position;vec3 color;};struct DirectionLight{vec3 direction;vec3 color;};"
 "const vec3 T[19]=vec3[](normalize(vec3(1,0,0)),normalize(vec3(0,1,0)),normalize(vec3(0,0,1)),normalize(vec3(1,1,1)),normalize(vec3(-1,1,1)),normalize(vec3(1,-1,1)),normalize(vec3(1,1,-1)),normalize(vec3(0,1,h+1)),normalize(vec3(0,-1,h+1)),normalize(vec3(h+1,0,1)),normalize(vec3(-h-1,0,1)),normalize(vec3(1,h+1,0)),normalize(vec3(-1,h+1,0)),normalize(vec3(0,h,1)),normalize(vec3(0,-h,1)),normalize(vec3(1,0,h)),normalize(vec3(-1,0,h)),normalize(vec3(h,1,0)),normalize(vec3(-h,1,0)));"
 "const float S=1,a=2,g=3;"
 "uniform float M[180];"
 "mat2 E(float v)"
 "{"
   "vec2 M=sin(vec2(1.5708,0)+v);"
   "return mat2(M,-M.y,M.x);"
 "}"
 "mat3 E(vec3 v,float M)"
 "{"
   "v=normalize(v);"
   "float n=sin(M),i=cos(M),f=1.-i;"
   "return mat3(f*v.x*v.x+i,f*v.x*v.y-v.z*n,f*v.z*v.x+v.y*n,f*v.x*v.y+v.z*n,f*v.y*v.y+i,f*v.y*v.z-v.x*n,f*v.z*v.x-v.y*n,f*v.y*v.z+v.x*n,f*v.z*v.z+i);"
 "}"
 "float D(vec2 v)"
 "{"
   "vec2 M=sin(v*.6345)+sin(v*1.62423);"
   "return dot(M,vec2(.125))+.5;"
 "}"
 "vec2 P(vec2 v)"
 "{"
   "return v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3))),-1.+2.*fract(sin(v)*43758.5);"
 "}"
 "float u(vec2 v)"
 "{"
   "return fract(sin(dot(v.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float N(float v)"
 "{"
   "return N(vec2(v));"
 "}"
 "float I(in vec2 v)"
 "{"
   "float n=.366025,M=.211325;"
   "vec2 i=floor(v+(v.x+v.y)*n),m=v-i+(i.x+i.y)*M,x=m.x>m.y?vec2(1.,0.):vec2(0.,1.),f=m-x+M,y=m-1.+2.*M;"
   "vec3 s=max(.5-vec3(dot(m,m),dot(f,f),dot(y,y)),0.),d=s*s*s*s*vec3(dot(m,P(i)),dot(f,P(i+x)),dot(y,P(i+1.)));"
   "return dot(d,vec3(70.));"
 "}"
 "float D(float v,float n,float y)"
 "{"
   "float M=exp(-y*v)+exp(-y*n);"
   "return-log(M)/y;"
 "}"
 "float L(vec2 v)"
 "{"
   "return sqrt(v.x*v.x+v.y*v.y);"
 "}"
 "float b(vec2 v)"
 "{"
   "return v=v*v*v,v=v*v,pow(v.x+v.y,1./6.);"
 "}"
 "float B(vec2 v)"
 "{"
   "return v=v*v,v=v*v,v=v*v,pow(v.x+v.y,.125);"
 "}"
 "float R(float v)"
 "{"
   "return v<0?-1:1;"
 "}"
 "vec2 O(vec2 v)"
 "{"
   "return vec2(v.x<0?-1:1,v.y<0?-1:1);"
 "}"
 "float F(float v)"
 "{"
   "return v*v;"
 "}"
 "vec2 q(vec2 v)"
 "{"
   "return v*v;"
 "}"
 "vec3 Y(vec3 v)"
 "{"
   "return v*v;"
 "}"
 "float V(vec3 v)"
 "{"
   "return dot(v,v);"
 "}"
 "float B(float v,float M)"
 "{"
   "return max(-v,M);"
 "}"
 "float G(vec2 v)"
 "{"
   "return max(v.x,v.y);"
 "}"
 "float W(vec3 v)"
 "{"
   "return max(max(v.x,v.y),v.z);"
 "}"
 "float U(vec4 v)"
 "{"
   "return max(max(v.x,v.y),max(v.z,v.w));"
 "}"
 "float H(vec2 v)"
 "{"
   "return min(v.x,v.y);"
 "}"
 "float Z(vec3 v)"
 "{"
   "return min(min(v.x,v.y),v.z);"
 "}"
 "float X(vec4 v)"
 "{"
   "return min(min(v.x,v.y),min(v.z,v.w));"
 "}"
 "float B(vec3 v,float n,float M,int m,int y)"
 "{"
   "float i=0;"
   "for(int f=m;f<=y;++f)"
     "i+=pow(abs(dot(v,T[f])),M);"
   "return pow(i,1/M)-n;"
 "}"
 "float B(vec3 v,float n,int m,int y)"
 "{"
   "float M=0;"
   "for(int f=m;f<=y;++f)"
     "M=max(M,abs(dot(v,T[f])));"
   "return M-n;"
 "}"
 "vec4 D(in vec4 v,in vec4 M)"
 "{"
   "return mix(v,M,step(M.x,v.x));"
 "}"
 "vec4 B(in vec4 v,in vec4 M,in float i)"
 "{"
   "vec4 n=vec4(M.x*(i*2.-1.),M.yzw);"
   "return mix(v,n,step(n.x,v.x)*step(0.,i));"
 "}"
 "PointLight B()"
 "{"
   "PointLight v;"
   "v.position=d.xyz;"
   "v.color=f.xyz;"
   "\n#if defined(NVIDIA)\n"
   "v.position=-v.position;"
   "\n#endif\n"
   "return v;"
 "}"
 "DirectionLight D()"
 "{"
   "DirectionLight v;"
   "v.direction=n.xyz;"
   "v.color=i.xyz;"
   "\n#if defined(NVIDIA)\n"
   "v.direction=-v.direction;"
   "v.color*=.123;"
   "\n#endif\n"
   "return v;"
 "}"
 "float F(inout float v,float M)"
 "{"
   "float n=M*.5,i=floor((v+n)/M);"
   "v=mod(v+n,M)-n;"
   "return i;"
 "}"
 "void Q(inout vec2 v)"
 "{"
   "v=(v+vec2(v.y,-v.x))*sqrt(.5);"
 "}"
 "float K(vec3 v)"
 "{"
   "return dot(v,vec3(.299,.587,.114));"
 "}"
 "vec3 E(sampler2D v,in vec3 M,in vec3 n)"
 "{"
   "return n=max(n*n,.001),n/=n.x+n.y+n.z,(texture(v,M.yz)*n.x+texture(v,M.zx)*n.y+texture(v,M.xy)*n.z).xyz;"
 "}"
 "vec3 D(sampler2D v,in vec3 M,in vec3 n,float y)"
 "{"
   "float x=.001;"
   "vec3 f=vec3(K(E(v,vec3(M.x-x,M.y,M.z),n)),K(E(v,vec3(M.x,M.y-x,M.z),n)),K(E(v,vec3(M.x,M.y,M.z-x),n)));"
   "f=(f-K(E(v,M,n)))/x;"
   "f-=n*dot(n,f);"
   "return normalize(n+f*y);"
 "}"
 "float G(vec3 v,float n)"
 "{"
   "return length(v)-n;"
 "}"
 "float H(vec3 v,vec3 n)"
 "{"
   "vec3 M=abs(v)-n;"
   "return length(max(M,vec3(0)))+U(min(M,vec3(0)));"
 "}"
 "float F(float v,float M,float n)"
 "{"
   "vec2 i=max(vec2(n-v,n-M),vec2(0));"
   "return max(n,min(v,M))-length(i);"
 "}"
 "vec4 I(vec3 v,in float n)"
 "{"
   "vec4 f=vec4(10000.,-1.,0.,0.);"
   "float i=1e+09;"
   "vec3 m=v-vec3(M[0],M[1],M[2]);"
   "m=m*E(vec3(M[6],M[7],M[8]),M[9]);"
   "i=min(G(m,M[3]),i);"
   "vec3 r=v-vec3(M[10],M[11],M[12]);"
   "r=r*E(vec3(M[16],M[17],M[18]),M[19]);"
   "i=min(G(r,M[13]),i);"
   "vec3 s=v-vec3(M[20],M[21],M[22]);"
   "s=s*E(vec3(M[26],M[27],M[28]),M[29]);"
   "i=min(G(s,M[23]),i);"
   "vec3 x=v-vec3(M[30],M[31],M[32]);"
   "x=x*E(vec3(M[36],M[37],M[38]),M[39]);"
   "i=min(G(x,M[33]),i);"
   "vec3 y=v-vec3(M[50],M[51],M[52]);"
   "y=y*E(vec3(M[56],M[57],M[58]),M[59]);"
   "i=min(G(y,M[53]),i);"
   "vec3 d=v-vec3(M[60],M[61],M[62]);"
   "d=d*E(vec3(M[66],M[67],M[68]),M[69]);"
   "i=min(G(d,M[63]),i);"
   "vec3 c=v-vec3(M[70],M[71],M[72]);"
   "c=c*E(vec3(M[76],M[77],M[78]),M[79]);"
   "i=F(G(c,M[73]),i,.3);"
   "vec3 C=v-vec3(M[90],M[91],M[92]);"
   "C=C*E(vec3(M[96],M[97],M[98]),M[99]);"
   "i=min(G(C,M[93]),i);"
   "vec3 z=v-vec3(M[100],M[101],M[102]);"
   "z=z*E(vec3(M[106],M[107],M[108]),M[109]);"
   "i=min(G(z,M[103]),i);"
   "vec3 l=v-vec3(M[120],M[121],M[122]);"
   "l=l*E(vec3(M[126],M[127],M[128]),M[129]);"
   "i=min(G(l,M[123]),i);"
   "vec3 e=v-vec3(M[130],M[131],M[132]);"
   "e=e*E(vec3(M[136],M[137],M[138]),M[139]);"
   "i=min(G(e,M[133]),i);"
   "vec3 T=v-vec3(M[140],M[141],M[142]);"
   "T=T*E(vec3(M[146],M[147],M[148]),M[149]);"
   "i=min(G(T,M[143]),i);"
   "vec3 h=v-vec3(M[150],M[151],M[152]);"
   "h=h*E(vec3(M[156],M[157],M[158]),M[159]);"
   "i=min(G(h,M[153]),i);"
   "vec3 p=v-vec3(M[160],M[161],M[162]);"
   "p=p*E(vec3(M[166],M[167],M[168]),M[169]);"
   "i=min(G(p,M[163]),i);"
   "vec4 w=vec4(i,S,v.xz+vec2(v.y,0.));"
   "f=D(f,w);"
   "float ab=1e+09;"
   "vec3 t=v-vec3(M[40],M[41],M[42]);"
   "t=t*E(vec3(M[46],M[47],M[48]),M[49]);"
   "ab=min(G(t,M[43]),ab);"
   "vec3 o=v-vec3(M[170],M[171],M[172]);"
   "o=o*E(vec3(M[176],M[177],M[178]),M[179]);"
   "ab=min(H(o,vec3(M[173],M[174],M[175])),ab);"
   "vec4 A=vec4(ab,a,v.xz+vec2(v.y,0.));"
   "f=D(f,A);"
   "float P=1e+09;"
   "vec3 I=v-vec3(M[80],M[81],M[82]);"
   "I=I*E(vec3(M[86],M[87],M[88]),M[89]);"
   "P=min(H(I,vec3(M[83],M[84],M[85])),P);"
   "vec3 j=v-vec3(M[110],M[111],M[112]);"
   "j=j*E(vec3(M[116],M[117],M[118]),M[119]);"
   "P=min(H(j,vec3(M[113],M[114],M[115])),P);"
   "vec4 K=vec4(P,g,v.xz+vec2(v.y,0.));"
   "f=D(f,K);"
   "return f;"
 "}"
 "Material J(vec3 v)"
 "{"
   "vec3 M=v;"
   "M.y+=abs(M.z)/12.;"
   "vec3 n=M,i=v,f=v;"
   "float r=1e+08,x=1e+08,m=I(M.xz/6.);"
   "m+=I(M.xz*12.)/64.;"
   "m+=I(M.xz*40.)/128.;"
   "r+=(I(M.xy/3.)*sin(M.z)+I(M.xy)*cos(M.z))/3.;"
   "float s=I(M.xz*2.)/6.,h=m;"
   "vec3 c=vec3(1.)-6.*vec3(.4,.6,.8)*I(M.xz/6.)*I(M.xz*12.);"
   "r-=(I(M.xz*120.)+I(M.zy*120.))/880.;"
   "vec3 y=vec3(.8,1.,.4);"
   "c+=y/(1.+.6*pow(length(M-vec3(1.,0.,4.)),2.));"
   "Material d;"
   "d.albedo=c;"
   "d.reflectionCoefficient=.1;"
   "d.smoothness=.1;"
   "d.transparency=0.;"
   "d.reflectindx=.1;"
   "return d;"
 "}"
 "Material k(in ContactInfo v)"
 "{"
   "Material M;"
   "if(v.id.x==S)"
     "M.reflectionCoefficient=.27,M.albedo=vec3(1,1,1),M.transparency=0,M.smoothness=.8,M.reflectindx=.69;"
   "if(v.id.x==a)"
     "M=J(v.position);"
   "if(v.id.x==g)"
     "M.reflectionCoefficient=.178,M.albedo=vec3(1,1,1),M.transparency=0,M.smoothness=.37,M.reflectindx=.54;"
   "return M;"
 "}"
 "vec3 j(vec3 v)"
 "{"
   "vec3 M=D().direction;"
   "M=normalize(M);"
   "float n=max(dot(v,M),0.);"
   "vec3 f=min(max(pow(n,41.)*vec3(1.8,1.1,.9)*.6,.01),1.);"
   "f+=min(max(pow(n,2.5)*vec3(.8,.9,1.)*1.6,.01),1.);"
   "f+=min(max(pow(n,81.)*1.6,.01),1.)*1.1;"
   "return max(f,vec3(.8,.9,1.)*.125);"
 "}"
 "vec3 J(in vec3 v,in float M)"
 "{"
   "float i=.025;"
   "vec3 f[4];"
   "f[0]=vec3(i,-i,-i);"
   "f[1]=vec3(-i,-i,i);"
   "f[2]=vec3(-i,i,-i);"
   "f[3]=vec3(i,i,i);"
   "float n=I(v+f[0],M).x,x=I(v+f[1],M).x,h=I(v+f[2],M).x,y=I(v+f[3],M).x;"
   "vec3 m=normalize(f[0]*n+f[1]*x+f[2]*h+f[3]*y);"
   "return m;"
 "}"
 "void E(in Trace v,out ContactInfo M,int n,float i)"
 "{"
   "ContactInfo f=M;"
   "M.distanc=v.startdistanc;"
   "M.id.x=0.;"
   "for(int r=0;r<=n;r++)"
     "{"
       "M.position=v.origin+v.direction*M.distanc;"
       "vec4 m=I(M.position,i);"
       "if(s==0.&&r<1&&m.y==g&&m.x<.001)"
         "s=1.,z=s;"
       "else"
         " M.id=m.yzw,M.distanc=M.distanc+m.x/2.;"
     "}"
   "if(M.distanc>=v.length)"
     "M.distanc=1000.,M.position=v.origin+v.direction*M.distanc,M.id.x=0.;"
 "}"
 "void F(in Trace v,out ContactInfo M,int n,float i)"
 "{"
   "M.distanc=v.startdistanc;"
   "M.id.x=0.;"
   "for(int f=0;f<=n/3;f++)"
     "{"
       "M.position=v.origin+v.direction*M.distanc;"
       "vec4 m=I(M.position,i);"
       "M.id=m.yzw;"
       "M.distanc=M.distanc+m.x;"
       "if(m.y!=g)"
         "return;"
     "}"
   "if(M.distanc>=v.length)"
     "M.distanc=1000.,M.position=v.origin+v.direction*M.distanc,M.id.x=0.;"
 "}"
 "float G(vec3 v,vec3 n,vec3 m,float M)"
 "{"
   "vec3 i=v,f=m;"
   "float y=.1,x=M,r=1.;"
   "for(int s=0;s<32;s++)"
     "{"
       "float d=I(i+f*y,p).x;"
       "d=max(d,0.);"
       "r=min(r,x*d/y);"
       "y+=clamp(d,.001,.9);"
     "}"
   "return clamp(r,.1,9.);"
 "}"
 "float H(in vec3 v,in vec3 M,in vec3 i,in float n)"
 "{"
   "return G(v,M,i,n);"
 "}"
 "float K(in ContactInfo v,in Surface M)"
 "{"
   "vec3 i=v.position,f=M.normal;"
   "float n=1.,x=0.;"
   "for(int r=0;r<=5;r++)"
     "{"
       "x+=.1;"
       "vec4 m=I(i+f*x,p);"
       "n*=1.-max(0.,(x-m.x)*.4/x);"
     "}"
   "return n;"
 "}"
 "void G(inout vec3 v,in Trace M,in ContactInfo i)"
 "{"
   "float n=exp(i.distanc*-fogDensity*(1.+z));"
   "vec3 f=j(M.direction);"
   "DirectionLight m=D();"
   "float x=clamp(dot(-m.direction,M.direction),0.,1.);"
   "f+=m.color*pow(x,20.);"
   "PointLight d=B();"
   "vec3 y=d.position-M.origin;"
   "float r=dot(y,M.direction);"
   "r=clamp(r,0.,i.distanc);"
   "vec3 s=M.origin+M.direction*r;"
   "float c=length(s-d.position);"
   "v+=d.color*.01/(c*c);"
 "}"
 "vec3 D(in vec3 v,in vec3 M,in vec3 i,in vec3 n,in Material m)"
 "{"
   "vec3 f=reflect(n,i),x=normalize(f+-n);"
   "float y=m.reflectionCoefficient,c=m.smoothness*.9+.1,r=dot(x,-n);"
   "r=clamp(1.-r,0.,1.);"
   "float s=pow(r,5.),h=y+(1.-y)*s*c;"
   "return mix(v,M,h);"
 "}"
 "float I(in vec3 v,in vec3 M,in vec3 i,in float n)"
 "{"
   "vec3 f=normalize(M-v);"
   "float m=max(0.,dot(f,i)),x=exp2(4.+6.*n),c=(x+2.)*.125;"
   "return pow(m,x)*c;"
 "}"
 "Shading E(in PointLight v,in vec3 M,in vec3 n,in vec3 i,in Material f)"
 "{"
   "Shading m;"
   "vec3 y=v.position-M,x=normalize(y);"
   "float s=length(y),c=1./(s*s),r=H(M,i,x,s);"
   "vec3 d=v.color*max(0.,r*c*dot(x,i)/(1.+f.transparency));"
   "m.diffuse=d;"
   "m.specular=I(n,x,i,f.smoothness)*d;"
   "return m;"
 "}"
 "Shading F(in DirectionLight v,in vec3 M,in vec3 n,in vec3 i,in Material f)"
 "{"
   "Shading m;"
   "float y=10.;"
   "vec3 x=-v.direction;"
   "float s=H(M,i,x,y);"
   "vec3 c=v.color*s*max(0.,dot(x,i)/(1.+f.transparency));"
   "m.diffuse=c;"
   "m.specular=I(n,x,i,f.smoothness)*c;"
   "return m;"
 "}"
 "vec3 J(in Trace M,in ContactInfo v,in Surface i,in Material n)"
 "{"
   "Shading f;"
   "float m=K(v,i);"
   "vec3 c=j(i.normal)*m;"
   "f.diffuse=c;"
   "f.specular=i.reflection;"
   "PointLight x=B();"
   "Shading d=E(x,v.position,M.direction,i.normal,n);"
   "f.diffuse+=d.diffuse;"
   "f.specular+=d.specular;"
   "DirectionLight y=D();"
   "Shading s=F(y,v.position,M.direction,i.normal,n);"
   "f.diffuse+=s.diffuse;"
   "f.specular+=s.specular;"
   "vec3 r=mix(f.diffuse*n.albedo*(1.-n.transparency),i.subsurface,n.transparency);"
   "return D(r,f.specular,i.normal,M.direction,n);"
 "}"
 "vec3 ab(in Trace v)"
 "{"
   "ContactInfo M;"
   "s=0.;"
   "E(v,M,48,w);"
   "vec3 n;"
   "if(M.id.x<.5)"
     "n=j(v.direction);"
   "else"
     "{"
       "Surface i;"
       "i.normal=J(M.position,w);"
       "Material f=k(M);"
       "i.reflection=j(reflect(v.direction,i.normal));"
       "f.transparency=0.;"
       "n=J(v,M,i,f);"
     "}"
   "G(n,v,M);"
   "return n;"
 "}"
 "vec3 H(in Trace v,in ContactInfo M,in Surface i)"
 "{"
   "const float m=.1;"
   "Trace f;"
   "f.direction=reflect(v.direction,i.normal);"
   "f.origin=M.position;"
   "f.length=16.;"
   "f.startdistanc=m/abs(dot(f.direction,i.normal));"
   "return ab(f);"
 "}"
 "vec3 K(in Trace v,in ContactInfo M,in Surface i,in Material n)"
 "{"
   "s=0.;"
   "float m=.05;"
   "Trace f;"
   "f.direction=refract(v.direction,i.normal,n.reflectindx);"
   "f.origin=M.position;"
   "f.length=16.;"
   "f.startdistanc=m/abs(dot(f.direction,i.normal));"
   "ContactInfo d;"
   "F(f,d,32,A);"
   "vec3 x=J(d.position,A);"
   "Trace r;"
   "r.direction=refract(f.direction,x,1./n.reflectindx);"
   "r.origin=d.position;"
   "r.length=16.;"
   "r.startdistanc=0.;"
   "float y=d.distanc,c=n.transparency/(1.+distance(d.position,M.position)*4.),h=1.-c;"
   "vec3 C=n.albedo*ab(r)*h,z=n.albedo,e=1.7/(1.+z*y);"
   "return C*e;"
 "}"
 "vec3 ac(in vec3 v)"
 "{"
   "return vec3(1.,1.,1.)-exp2(-v);"
 "}"
 "vec4 E()"
 "{"
   "vec2 M=gl_FragCoord.xy;"
   "vec4 f;"
   "Trace i;"
   "s=0.;"
   "vec2 n=M.xy/m.xy;"
   "vec3 d=y.xyz,h=x.xyz;"
   "float C=r;"
   "vec3 z=normalize(d-h),w=c.xyz;"
   "vec2 T=n*2.-1.;"
   "float e=m.x/m.y;"
   "T.y/=e;"
   "i.origin=h;"
   "vec3 o=normalize(cross(z,w)),a=cross(o,z);"
   "z*=tan((90.-C*.5)*l);"
   "i.direction=normalize(-o*T.x+a*T.y+z);"
   "i.startdistanc=0.;"
   "i.length=t;"
   "i.direction.y*=.85;"
   "ContactInfo P;"
   "E(i,P,256,p);"
   "vec3 S;"
   "if(P.id.x<.5)"
     "S=j(i.direction);"
   "else"
     "{"
       "Surface A;"
       "A.normal=J(P.position,p);"
       "Material I=k(P);"
       "A.reflection=H(i,P,A);"
       "float D=P.distanc;"
       "if(I.transparency>0.)"
         "A.subsurface=K(i,P,A,I);"
       "S=J(i,P,A,I);"
     "}"
   "G(S,i,P);"
   "float A=1.5;"
   "vec2 I=(n-.5)*(m.x/m.y)*2.;"
   "float D=.2,g=sqrt(dot(I,I))*D,u=g*g+1.,L=1.2/(u*u);"
   "vec3 U=(N(n+v)-.5)*vec3(1.,1.,1.)*.01;"
   "f=min(max(vec4(L*ac(S*A)+U,1.),vec4(0.,0.,0.,1.)),vec4(1.,1.,1.,1.));"
   "return f;"
 "}"
 "void main()"
 "{"
   "gl_FragColor=E();"
 "}";

#endif // FRAGMENT_INL_
