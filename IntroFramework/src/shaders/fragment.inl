/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR__CAMERALOOKAT "t"
# define VAR__CAMERAPOSITION "o"
# define VAR__CAMERAUP "a"
# define VAR__DIRECTIONALLIGHT "r"
# define VAR__DIRECTIONALLIGHTCOLOR "e"
# define VAR__FOV "C"
# define VAR__LIGHT "l"
# define VAR__MAINTEX "v"
# define VAR__OBJECTS "B"
# define VAR__POINTLIGHTCOLOR "z"
# define VAR__POINTLIGHTPOSITION "p"
# define VAR__VALUE "x"
# define VAR__ICHANNEL0 "i"
# define VAR__ICHANNEL1 "n"
# define VAR__ICHANNEL2 "f"
# define VAR__ICHANNEL3 "d"
# define VAR__IFRAME "c"
# define VAR__IMOUSE "m"
# define VAR__IRESOLUTION "s"
# define VAR__ITIME "y"

const char *fragment_frag =
 "#version 130\n"
 "uniform sampler2D v,i,n,f,d;"
 "uniform float y,x,c;"
 "uniform vec4 m,s,l,r,e,p,z,o,t,a;"
 "uniform float C;\n"
 "#define maxItersGlobal 123\n"
 "#define fogDensity 0.01\n"
 "#define ENABLE_FOG\n"
 "#define ENABLE_REFLECTIONS\n"
 "#define ENABLE_SHADOWS\n"
 "#define ENABLE_TRANSPARENCY\n"
 "#define ENABLE_AO\n"
 "#define DOUBLE_SIDED_TRANSPARENCY\n"
 "#define saturate(x)clamp(x,0,1)\n"
 "float S,h;"
 "const float E=3.14159,w=E/180.,u=E*2.,g=E*2.,A=sqrt(5)*.5+.5,L=32.,I=-1.,N=1.,T=0.;struct Trace{vec3 origin;vec3 direction;float startdistanc;float length;};struct Surface{vec3 normal;vec3 reflection;vec3 subsurface;};struct Material{float reflectionCoefficient;float smoothness;float transparency;float reflectindx;vec3 albedo;};struct Shading{vec3 diffuse;vec3 specular;};struct ContactInfo{vec3 position;float distanc;vec3 id;};struct PointLight{vec3 position;vec3 color;};struct DirectionLight{vec3 direction;vec3 color;};"
 "const vec3 M[19]=vec3[](normalize(vec3(1,0,0)),normalize(vec3(0,1,0)),normalize(vec3(0,0,1)),normalize(vec3(1,1,1)),normalize(vec3(-1,1,1)),normalize(vec3(1,-1,1)),normalize(vec3(1,1,-1)),normalize(vec3(0,1,A+1)),normalize(vec3(0,-1,A+1)),normalize(vec3(A+1,0,1)),normalize(vec3(-A-1,0,1)),normalize(vec3(1,A+1,0)),normalize(vec3(-1,A+1,0)),normalize(vec3(0,A,1)),normalize(vec3(0,-A,1)),normalize(vec3(1,0,A)),normalize(vec3(-1,0,A)),normalize(vec3(A,1,0)),normalize(vec3(-A,1,0)));"
 "const float D=1,b=2,P=3;"
 "uniform float B[180];"
 "mat2 R(float v)"
 "{"
   "vec2 B=sin(vec2(1.5708,0)+v);"
   "return mat2(B,-B.y,B.x);"
 "}"
 "mat3 R(vec3 v,float B)"
 "{"
   "v=normalize(v);"
   "float n=sin(B),i=cos(B),f=1.-i;"
   "return mat3(f*v.x*v.x+i,f*v.x*v.y-v.z*n,f*v.z*v.x+v.y*n,f*v.x*v.y+v.z*n,f*v.y*v.y+i,f*v.y*v.z-v.x*n,f*v.z*v.x-v.y*n,f*v.y*v.z+v.x*n,f*v.z*v.z+i);"
 "}"
 "float O(vec2 v)"
 "{"
   "vec2 n=sin(v*.6345)+sin(v*1.62423);"
   "return dot(n,vec2(.125))+.5;"
 "}"
 "vec2 F(vec2 v)"
 "{"
   "return v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3))),-1.+2.*fract(sin(v)*43758.5);"
 "}"
 "float q(vec2 v)"
 "{"
   "return fract(sin(dot(v.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float Y(float v)"
 "{"
   "return Y(vec2(v));"
 "}"
 "float V(in vec2 v)"
 "{"
   "float n=.366025,B=.211325;"
   "vec2 i=floor(v+(v.x+v.y)*n),m=v-i+(i.x+i.y)*B,x=m.x>m.y?vec2(1.,0.):vec2(0.,1.),f=m-x+B,y=m-1.+2.*B;"
   "vec3 a=max(.5-vec3(dot(m,m),dot(f,f),dot(y,y)),0.),d=a*a*a*a*vec3(dot(m,F(i)),dot(f,F(i+x)),dot(y,F(i+1.)));"
   "return dot(d,vec3(70.));"
 "}"
 "float F(float v,float n,float y)"
 "{"
   "float B=exp(-y*v)+exp(-y*n);"
   "return-log(B)/y;"
 "}"
 "float G(vec2 v)"
 "{"
   "return sqrt(v.x*v.x+v.y*v.y);"
 "}"
 "float W(vec2 v)"
 "{"
   "return v=v*v*v,v=v*v,pow(v.x+v.y,1./6.);"
 "}"
 "float U(vec2 v)"
 "{"
   "return v=v*v,v=v*v,v=v*v,pow(v.x+v.y,.125);"
 "}"
 "float H(float v)"
 "{"
   "return v<0?-1:1;"
 "}"
 "vec2 Z(vec2 v)"
 "{"
   "return vec2(v.x<0?-1:1,v.y<0?-1:1);"
 "}"
 "float X(float v)"
 "{"
   "return v*v;"
 "}"
 "vec2 Q(vec2 v)"
 "{"
   "return v*v;"
 "}"
 "vec3 K(vec3 v)"
 "{"
   "return v*v;"
 "}"
 "float J(vec3 v)"
 "{"
   "return dot(v,v);"
 "}"
 "float F(float v,float B)"
 "{"
   "return max(-v,B);"
 "}"
 "float k(vec2 v)"
 "{"
   "return max(v.x,v.y);"
 "}"
 "float j(vec3 v)"
 "{"
   "return max(max(v.x,v.y),v.z);"
 "}"
 "float ab(vec4 v)"
 "{"
   "return max(max(v.x,v.y),max(v.z,v.w));"
 "}"
 "float ac(vec2 v)"
 "{"
   "return min(v.x,v.y);"
 "}"
 "float ad(vec3 v)"
 "{"
   "return min(min(v.x,v.y),v.z);"
 "}"
 "float ae(vec4 v)"
 "{"
   "return min(min(v.x,v.y),min(v.z,v.w));"
 "}"
 "float F(vec3 v,float n,float B,int m,int y)"
 "{"
   "float i=0;"
   "for(int f=m;f<=y;++f)"
     "i+=pow(abs(dot(v,M[f])),B);"
   "return pow(i,1/B)-n;"
 "}"
 "float F(vec3 v,float n,int m,int y)"
 "{"
   "float B=0;"
   "for(int f=m;f<=y;++f)"
     "B=max(B,abs(dot(v,M[f])));"
   "return B-n;"
 "}"
 "vec4 G(in vec4 v,in vec4 B)"
 "{"
   "return mix(v,B,step(B.x,v.x));"
 "}"
 "vec4 G(in vec4 v,in vec4 B,in float i)"
 "{"
   "vec4 n=vec4(B.x*(i*2.-1.),B.yzw);"
   "return mix(v,n,step(n.x,v.x)*step(0.,i));"
 "}"
 "PointLight F()"
 "{"
   "PointLight v;"
   "v.position=p.xyz;"
   "v.color=z.xyz;"
   "\n#if defined(NVIDIA)\n"
   "v.position=-v.position;"
   "\n#endif\n"
   "return v;"
 "}"
 "DirectionLight G()"
 "{"
   "DirectionLight v;"
   "v.direction=r.xyz;"
   "v.color=e.xyz;"
   "\n#if defined(NVIDIA)\n"
   "v.direction=-v.direction;"
   "v.color*=.123;"
   "\n#endif\n"
   "return v;"
 "}"
 "float H(inout float v,float B)"
 "{"
   "float n=B*.5,i=floor((v+n)/B);"
   "v=mod(v+n,B)-n;"
   "return i;"
 "}"
 "void af(inout vec2 v)"
 "{"
   "v=(v+vec2(v.y,-v.x))*sqrt(.5);"
 "}"
 "float ag(vec3 v)"
 "{"
   "return dot(v,vec3(.299,.587,.114));"
 "}"
 "vec3 H(sampler2D v,in vec3 B,in vec3 n)"
 "{"
   "return n=max(n*n,.001),n/=n.x+n.y+n.z,(texture(v,B.yz)*n.x+texture(v,B.zx)*n.y+texture(v,B.xy)*n.z).xyz;"
 "}"
 "vec3 G(sampler2D v,in vec3 B,in vec3 n,float y)"
 "{"
   "float x=.001;"
   "vec3 f=vec3(ag(H(v,vec3(B.x-x,B.y,B.z),n)),ag(H(v,vec3(B.x,B.y-x,B.z),n)),ag(H(v,vec3(B.x,B.y,B.z-x),n)));"
   "f=(f-ag(H(v,B,n)))/x;"
   "f-=n*dot(n,f);"
   "return normalize(n+f*y);"
 "}"
 "float J(vec3 v,float n)"
 "{"
   "return length(v)-n;"
 "}"
 "float K(vec3 v,vec3 n)"
 "{"
   "vec3 B=abs(v)-n;"
   "return length(max(B,vec3(0)))+ab(min(B,vec3(0)));"
 "}"
 "float J(float v,float B,float n)"
 "{"
   "vec2 i=max(vec2(n-v,n-B),vec2(0));"
   "return max(n,min(v,B))-length(i);"
 "}"
 "vec4 O(vec3 v,in float n)"
 "{"
   "vec4 f=vec4(10000.,-1.,0.,0.);"
   "float i=1e+09;"
   "vec3 m=v-vec3(B[0],B[1],B[2]);"
   "m=m*R(vec3(B[6],B[7],B[8]),B[9]);"
   "i=min(J(m,B[3]),i);"
   "vec3 r=v-vec3(B[10],B[11],B[12]);"
   "r=r*R(vec3(B[16],B[17],B[18]),B[19]);"
   "i=min(J(r,B[13]),i);"
   "vec3 x=v-vec3(B[20],B[21],B[22]);"
   "x=x*R(vec3(B[26],B[27],B[28]),B[29]);"
   "i=min(J(x,B[23]),i);"
   "vec3 y=v-vec3(B[30],B[31],B[32]);"
   "y=y*R(vec3(B[36],B[37],B[38]),B[39]);"
   "i=min(J(y,B[33]),i);"
   "vec3 a=v-vec3(B[40],B[41],B[42]);"
   "a=a*R(vec3(B[46],B[47],B[48]),B[49]);"
   "i=min(J(a,B[43]),i);"
   "vec3 s=v-vec3(B[50],B[51],B[52]);"
   "s=s*R(vec3(B[56],B[57],B[58]),B[59]);"
   "i=min(J(s,B[53]),i);"
   "vec3 d=v-vec3(B[60],B[61],B[62]);"
   "d=d*R(vec3(B[66],B[67],B[68]),B[69]);"
   "i=J(J(d,B[63]),i,.3);"
   "vec3 c=v-vec3(B[70],B[71],B[72]);"
   "c=c*R(vec3(B[76],B[77],B[78]),B[79]);"
   "i=min(J(c,B[73]),i);"
   "vec3 S=v-vec3(B[80],B[81],B[82]);"
   "S=S*R(vec3(B[86],B[87],B[88]),B[89]);"
   "i=min(J(S,B[83]),i);"
   "vec3 E=v-vec3(B[90],B[91],B[92]);"
   "E=E*R(vec3(B[96],B[97],B[98]),B[99]);"
   "i=min(J(E,B[93]),i);"
   "vec3 e=v-vec3(B[100],B[101],B[102]);"
   "e=e*R(vec3(B[106],B[107],B[108]),B[109]);"
   "i=min(J(e,B[103]),i);"
   "vec3 C=v-vec3(B[110],B[111],B[112]);"
   "C=C*R(vec3(B[116],B[117],B[118]),B[119]);"
   "i=min(J(C,B[113]),i);"
   "vec4 T=vec4(i,D,v.xz+vec2(v.y,0.));"
   "f=G(f,T);"
   "float A=1e+09;"
   "vec3 l=v-vec3(B[120],B[121],B[122]);"
   "l=l*R(vec3(B[126],B[127],B[128]),B[129]);"
   "A=min(J(l,B[123]),A);"
   "vec3 p=v-vec3(B[130],B[131],B[132]);"
   "p=p*R(vec3(B[136],B[137],B[138]),B[139]);"
   "A=min(J(p,B[133]),A);"
   "vec4 o=vec4(A,b,v.xz+vec2(v.y,0.));"
   "f=G(f,o,n);"
   "float z=1e+09;"
   "vec3 t=v-vec3(B[140],B[141],B[142]);"
   "t=t*R(vec3(B[146],B[147],B[148]),B[149]);"
   "z=min(K(t,vec3(B[143],B[144],B[145])),z);"
   "vec3 M=v-vec3(B[150],B[151],B[152]);"
   "M=M*R(vec3(B[156],B[157],B[158]),B[159]);"
   "z=min(K(M,vec3(B[153],B[154],B[155])),z);"
   "vec3 h=v-vec3(B[160],B[161],B[162]);"
   "h=h*R(vec3(B[166],B[167],B[168]),B[169]);"
   "z=min(J(h,B[163]),z);"
   "vec3 u=v-vec3(B[170],B[171],B[172]);"
   "u=u*R(vec3(B[176],B[177],B[178]),B[179]);"
   "z=min(K(u,vec3(B[173],B[174],B[175])),z);"
   "vec4 N=vec4(z,P,v.xz+vec2(v.y,0.));"
   "f=G(f,N);"
   "return f;"
 "}"
 "Material ah(in ContactInfo v)"
 "{"
   "Material B;"
   "if(v.id.x==D)"
     "B.reflectionCoefficient=.178,B.albedo=vec3(1,1,1),B.transparency=0,B.smoothness=.37,B.reflectindx=.54;"
   "if(v.id.x==b)"
     "B.reflectionCoefficient=.19,B.albedo=vec3(1,0,0),B.transparency=.258824,B.smoothness=.99,B.reflectindx=.64;"
   "if(v.id.x==P)"
     "B.reflectionCoefficient=.27,B.albedo=vec3(1,1,1),B.transparency=0,B.smoothness=.8,B.reflectindx=.69;"
   "return B;"
 "}"
 "vec3 ai(vec3 v)"
 "{"
   "vec3 B=G().direction;"
   "B=normalize(B);"
   "float n=max(dot(v,B),0.);"
   "vec3 f=min(max(pow(n,41.)*vec3(1.8,1.1,.9)*.6,.01),1.);"
   "f+=min(max(pow(n,2.5)*vec3(.8,.9,1.)*1.6,.01),1.);"
   "f+=min(max(pow(n,81.)*1.6,.01),1.)*1.1;"
   "return max(f,vec3(.8,.9,1.)*.125);"
 "}"
 "vec3 Q(in vec3 v,in float B)"
 "{"
   "float n=.025;"
   "vec3 i[]={vec3(n,-n,-n),vec3(-n,-n,n),vec3(-n,n,-n),vec3(n,n,n)};"
   "float f=O(v+i[0],B).x,x=O(v+i[1],B).x,A=O(v+i[2],B).x,y=O(v+i[3],B).x;"
   "vec3 m=normalize(i[0]*f+i[1]*x+i[2]*A+i[3]*y);"
   "return m;"
 "}"
 "void H(in Trace v,out ContactInfo B,int n,float i)"
 "{"
   "ContactInfo f=B;"
   "B.distanc=v.startdistanc;"
   "B.id.x=0.;"
   "for(int r=0;r<=n;r++)"
     "{"
       "B.position=v.origin+v.direction*B.distanc;"
       "vec4 m=O(B.position,i);"
       "if(S==0.&&r<1&&m.y==P&&m.x<.001)"
         "S=1.,h=S;"
       "else"
         " B.id=m.yzw,B.distanc=B.distanc+m.x/2.;"
     "}"
   "if(B.distanc>=v.length)"
     "B.distanc=1000.,B.position=v.origin+v.direction*B.distanc,B.id.x=0.;"
 "}"
 "void J(in Trace v,out ContactInfo B,int n,float i)"
 "{"
   "B.distanc=v.startdistanc;"
   "B.id.x=0.;"
   "for(int f=0;f<=n/3;f++)"
     "{"
       "B.position=v.origin+v.direction*B.distanc;"
       "vec4 m=O(B.position,i);"
       "B.id=m.yzw;"
       "B.distanc=B.distanc+m.x;"
       "if(m.y!=P)"
         "return;"
     "}"
   "if(B.distanc>=v.length)"
     "B.distanc=1000.,B.position=v.origin+v.direction*B.distanc,B.id.x=0.;"
 "}"
 "float K(vec3 v,vec3 n,vec3 m,float B)"
 "{"
   "vec3 i=v,f=m;"
   "float y=.1,x=B,r=1.;"
   "for(int c=0;c<32;c++)"
     "{"
       "float d=O(i+f*y,N).x;"
       "d=max(d,0.);"
       "r=min(r,x*d/y);"
       "y+=clamp(d,.001,.9);"
     "}"
   "return clamp(r,.1,9.);"
 "}"
 "float O(in vec3 v,in vec3 B,in vec3 n,in float i)"
 "{"
   "return K(v,B,n,i);"
 "}"
 "float U(in ContactInfo v,in Surface B)"
 "{"
   "\n#ifdef ENABLE_AO\n"
   "vec3 i=v.position,n=B.normal;"
   "float f=1.,x=0.;"
   "for(int r=0;r<=5;r++)"
     "{"
       "x+=.1;"
       "vec4 m=O(i+n*x,N);"
       "f*=1.-max(0.,(x-m.x)*.4/x);"
     "}"
   "return f;"
 "}"
 "void K(inout vec3 v,in Trace B,in ContactInfo i)"
 "{"
   "float n=exp(i.distanc*-fogDensity*(1.+h));"
   "vec3 f=ai(B.direction);"
   "DirectionLight m=G();"
   "float x=clamp(dot(-m.direction,B.direction),0.,1.);"
   "f+=m.color*pow(x,20.);"
   "PointLight d=F();"
   "vec3 y=d.position-B.origin;"
   "float r=dot(y,B.direction);"
   "r=clamp(r,0.,i.distanc);"
   "vec3 a=B.origin+B.direction*r;"
   "float s=length(a-d.position);"
   "v+=d.color*.01/(s*s);"
 "}"
 "vec3 G(in vec3 v,in vec3 B,in vec3 n,in vec3 i,in Material m)"
 "{"
   "vec3 f=reflect(i,n),x=normalize(f+-i);"
   "float y=m.reflectionCoefficient,r=m.smoothness*.9+.1,d=dot(x,-i);"
   "d=clamp(1.-d,0.,1.);"
   "float a=pow(d,5.),A=y+(1.-y)*a*r;"
   "return mix(v,B,A);"
 "}"
 "float Q(in vec3 v,in vec3 B,in vec3 n,in float i)"
 "{"
   "vec3 f=normalize(B-v);"
   "float m=max(0.,dot(f,n)),x=exp2(4.+6.*i),r=(x+2.)*.125;"
   "return pow(m,x)*r;"
 "}"
 "Shading H(in PointLight v,in vec3 B,in vec3 n,in vec3 i,in Material f)"
 "{"
   "Shading m;"
   "vec3 y=v.position-B,x=normalize(y);"
   "float d=length(y),r=1./(d*d),A=O(B,i,x,d);"
   "vec3 a=v.color*max(0.,A*r*dot(x,i)/(1.+f.transparency));"
   "m.diffuse=a;"
   "m.specular=Q(n,x,i,f.smoothness)*a;"
   "return m;"
 "}"
 "Shading J(in DirectionLight v,in vec3 B,in vec3 n,in vec3 i,in Material f)"
 "{"
   "Shading m;"
   "float y=10.;"
   "vec3 x=-v.direction;"
   "float a=O(B,i,x,y);"
   "vec3 r=v.color*a*max(0.,dot(x,i)/(1.+f.transparency));"
   "m.diffuse=r;"
   "m.specular=Q(n,x,i,f.smoothness)*r;"
   "return m;"
 "}"
 "vec3 R(in Trace v,in ContactInfo B,in Surface n,in Material i)"
 "{"
   "Shading f;"
   "float m=U(B,n);"
   "vec3 r=ai(n.normal)*m;"
   "f.diffuse=r;"
   "f.specular=n.reflection;"
   "PointLight x=F();"
   "Shading d=H(x,B.position,v.direction,n.normal,i);"
   "f.diffuse+=d.diffuse;"
   "f.specular+=d.specular;"
   "DirectionLight y=G();"
   "Shading a=J(y,B.position,v.direction,n.normal,i);"
   "f.diffuse+=a.diffuse;"
   "f.specular+=a.specular;"
   "vec3 c=mix(f.diffuse*i.albedo*(1.-i.transparency),n.subsurface,i.transparency);"
   "return G(c,f.specular,n.normal,v.direction,i);"
 "}"
 "vec3 aj(in Trace v)"
 "{"
   "ContactInfo B;"
   "S=0.;"
   "H(v,B,48,I);"
   "vec3 n;"
   "if(B.id.x<.5)"
     "n=ai(v.direction);"
   "else"
     "{"
       "Surface f;"
       "f.normal=Q(B.position,I);"
       "Material i=ah(B);"
       "f.reflection=ai(reflect(v.direction,f.normal));"
       "i.transparency=0.;"
       "n=R(v,B,f,i);"
     "}"
   "K(n,v,B);"
   "return n;"
 "}"
 "vec3 O(in Trace v,in ContactInfo B,in Surface i)"
 "{"
   "\n#ifdef ENABLE_REFLECTIONS\n"
   "{"
     "const float m=.1;"
     "Trace f;"
     "f.direction=reflect(v.direction,i.normal);"
     "f.origin=B.position;"
     "f.length=16.;"
     "f.startdistanc=m/abs(dot(f.direction,i.normal));"
     "return aj(f);"
   "}"
   "\n#else\n"
   "return ai(reflect(v.direction,i.normal));"
 "}"
 "vec3 U(in Trace v,in ContactInfo B,in Surface n,in Material i)"
 "{"
   "S=0.;"
   "\n#ifdef ENABLE_TRANSPARENCY\n"
   "float m=.05;"
   "Trace f;"
   "f.direction=refract(v.direction,n.normal,i.reflectindx);"
   "f.origin=B.position;"
   "f.length=16.;"
   "f.startdistanc=m/abs(dot(f.direction,n.normal));"
   "ContactInfo d;"
   "J(f,d,32,T);"
   "vec3 x=Q(d.position,T);"
   "Trace r;"
   "r.direction=refract(f.direction,x,1./i.reflectindx);"
   "r.origin=d.position;"
   "r.length=16.;"
   "r.startdistanc=0.;"
   "float y=d.distanc,A=i.transparency/(1.+distance(d.position,B.position)*4.),a=1.-A;"
   "vec3 c=i.albedo*aj(r)*a,z=i.albedo,s=1.7/(1.+z*y);"
   "return c*s;"
 "}"
 "vec3 ak(in vec3 v)"
 "{"
   "return vec3(1.,1.,1.)-exp2(-v);"
 "}"
 "void V(out vec4 v,in vec2 B)"
 "{"
   "Trace f;"
   "S=0.;"
   "vec2 n=B.xy/s.xy;"
   "vec3 i=t.xyz,m=o.xyz;"
   "float x=C;"
   "vec3 r=normalize(i-m),A=a.xyz;"
   "vec2 d=n*2.-1.;"
   "float ab=s.x/s.y;"
   "d.y/=ab;"
   "f.origin=m;"
   "vec3 c=normalize(cross(r,A)),z=cross(c,r);"
   "r*=tan((90.-x*.5)*w);"
   "f.direction=normalize(-c*d.x+z*d.y+r);"
   "f.startdistanc=0.;"
   "f.length=L;"
   "f.direction.y*=.85;"
   "ContactInfo l;"
   "H(f,l,256,N);"
   "vec3 e;"
   "if(l.id.x<.5)"
     "e=ai(f.direction);"
   "else"
     "{"
       "Surface T;"
       "T.normal=Q(l.position,N);"
       "Material p=ah(l);"
       "T.reflection=O(f,l,T);"
       "float E=l.distanc;"
       "if(p.transparency>0.)"
         "T.subsurface=U(f,l,T,p);"
       "e=R(f,l,T,p);"
     "}"
   "K(e,f,l);"
   "float T=1.5;"
   "vec2 p=(n-.5)*(s.x/s.y)*2.;"
   "float E=.2,h=sqrt(dot(p,p))*E,u=h*h+1.,M=1.2/(u*u);"
   "vec3 D=(Y(n+y)-.5)*vec3(1.,1.,1.)*.01;"
   "v=min(max(vec4(M*ak(e*T)+D,1.),vec4(0.,0.,0.,1.)),vec4(1.,1.,1.,1.));"
 "}"
 "void main()"
 "{"
   "vec4 v;"
   "vec2 B;"
   "B=gl_FragCoord.xy;"
   "V(v,B);"
   "gl_FragColor=v;"
 "}";

#endif // FRAGMENT_INL_
